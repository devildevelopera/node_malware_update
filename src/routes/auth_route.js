var express = require('express');
var router = express.Router();
const passport = require('passport');
const token = require('../token');
const session = require('express-session');
const constants = require('../constants');

require('../auth/jwt');
require('../auth/google');
require('../auth/twitter');
require('../auth/microsoft');
require('../auth/linkedin-oauth2');


// Generate the Token for the user authenticated in the request
function generateUserToken(req, res) {
    const accessToken = token.generateAccessToken(req.user.uid);
    const redirectUrl = "https://threathaus.com/browse";
    req.session.user = req.user;
    req.session.user.accessToken = accessToken;
    res.redirect(redirectUrl);
}

router.get('/google/start',
    passport.authenticate('google', { session: false, scope: ['openid', 'profile', 'email'] }));
router.get('/google/redirect',
    passport.authenticate('google', { session: false }),
    generateUserToken);

router.get('/twitter/start',
    passport.authenticate('twitter'));
router.get('/twitter/redirect',
    passport.authenticate('twitter', { session: false, failureRedirect: '/' }),
    generateUserToken);

router.get('/microsoft/start',
    passport.authenticate('microsoft', { session: false, scope: ['openid', 'profile', 'email'] }));
router.get('/microsoft/redirect',
    passport.authenticate('microsoft', { session: false }),
    generateUserToken);

router.get('/linkedin/start',
    passport.authenticate('linkedin', { session: false, state: 'SOME STATE'  }));
router.get('/linkedin/redirect',
    passport.authenticate('linkedin', { session: false, failureRedirect: '/' }),
    generateUserToken);

router.get('/logout', (req, res) => {
    if (req.session.user || req.session.adminType) {
        delete req.session.user;
        delete req.session.adminType;
    }
    res.json(req.session);
})

router.get('/check-session', (req, res) => {
    res.json({
        status: req.session.adminType,
        user: req.session.user,
    });
});

module.exports = router;